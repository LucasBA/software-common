#!/usr/bin/env python

from __future__ import division

import numpy

import roslib
roslib.load_manifest('kalman_6dof')
import rospy

from kalman_6dof.kalman import Kalman

for steps in [1, 10, 100, 1000, 10000, 1000000]:
    k = Kalman(rospy.Time(0), numpy.zeros(3), numpy.array([0, 0, 0, 1]), numpy.zeros(3), 0*numpy.identity(9), numpy.zeros(3), numpy.zeros((3, 3)), numpy.zeros(3), numpy.zeros((3, 3)))
    ac = .1**2 * numpy.identity(3) # .1 m/s^2
    gc = .1**2 * numpy.identity(3) # .1 rad/sec
    for i in xrange(0, steps+1):
        t = rospy.Time(i/float(steps))
        k = k.predict(t, [.1, .2, .3], gc, [1, -.4, .1 + 9.81], ac)
    assert k.t == rospy.Time(1)
    print steps, k.position, k.orientation, k.velocity_body
    #print k.P

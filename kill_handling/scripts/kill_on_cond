#!/usr/bin/env python

import sys

import roslib
roslib.load_manifest('kill_handling')
import rospy
import rostopic

from kill_handling.broadcaster import KillBroadcaster
from kill_handling.listener import KillListener


rospy.init_node('kill', anonymous=True)

cond = rospy.get_param('~cond')

kill_br = KillBroadcaster(id=rospy.get_name(), lifetime=rospy.Duration(1), description=rospy.get_name())
kill_listener = KillListener()


triggered = False

def got_msg(msg):
    global triggered
    if eval(cond, globals(), dict((k, getattr(msg, k)) for k in dir(msg))):
        triggered = True
rospy.Subscriber('topic', rostopic.get_topic_class(rospy.resolve_name('topic'), blocking=True)[0], got_msg)

while not rospy.is_shutdown():
    kill_br.send(triggered)
    if set(kill_listener.get_kills()) - set([rospy.get_name()]):
        # if there is another kill source
        triggered = False
    rospy.sleep(rospy.Duration(0.1))
